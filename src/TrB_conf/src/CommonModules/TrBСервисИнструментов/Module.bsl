#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Метод получения облигации по её идентификатору
// 
// Параметры:
//  IdType - ПеречислениеСсылка.TrBInstrumentIdType - Тип идентификатора инструмента. Возможные значения: figi, ticker
//  ClassCode - Строка - Идентификатор class_code. Обязателен при id_type = ticker.
//  Idd - Строка - Идентификатор запрашиваемого инструмента.
//  Песочница - Булево - Ложь, если это не песочница.
//  
// Возвращаемое значение:
//  Произвольный - Массив структур ответа данного запроса
//  
Функция BondBy(IdType, ClassCode, Idd, Песочница = Ложь) Экспорт

	URL = "https://invest-public-api.tinkoff.ru/rest/tinkoff.public.invest.api.contract.v1.InstrumentsService";
	
	ПараметрыТелаЗапроса = Новый Структура();
	ПараметрыТелаЗапроса.Вставить("IdType", IdType);
	ПараметрыТелаЗапроса.Вставить("ClassCode", ClassCode);
	ПараметрыТелаЗапроса.Вставить("Id", Idd);
	
	ТелоЗапроса = "{
					|'IdType': [IdType],
					|'ClassCode': [ClassCode],
					|'Id': [Idd]
					|}";
					
	ТелоЗапроса = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТелоЗапроса, ПараметрыТелаЗапроса);
	
	Ответ = TrBЗапросыTinkoff.ЗапросВТинькоффИнвестиции(URL, ТелоЗапроса, Песочница);
	
	Ответ.Содержимое = УправлениеКонтактнойИнформациейСлужебный.СтрокуJSONВСтруктуру(Ответ.Содержимое);
	
	Возврат Ответ;
	
КонецФункции

// Метод получения списка облигаций.
// 
// Параметры:
//  InstrumentStatus - ПеречислениеСсылка.TrBItrumentStatus - Статус запрашиваемых инструментов
//  Песочница - Булево - Ложь, если это не песочница.
//  
// Возвращаемое значение:
//  Произвольный - Массив структур ответа данного запроса
//  
Функция Bonds(InstrumentStatus, Песочница = Ложь) Экспорт
	
	URL = "https://invest-public-api.tinkoff.ru/rest/tinkoff.public.invest.api.contract.v1.InstrumentsService/Bonds";
	
	ПараметрыТелаЗапроса = Новый Структура();
	ПараметрыТелаЗапроса.Вставить("instrumentStatus", InstrumentStatus);
	
	ТелоЗапроса = "{
					|InstrumentStatus: [InstrumentStatus]
					|}";
					
	ТелоЗапроса = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТелоЗапроса, ПараметрыТелаЗапроса);
	
	Ответ = TrBЗапросыTinkoff.ЗапросВТинькоффИнвестиции(URL, ТелоЗапроса, Песочница);
	
	Ответ.Содержимое = УправлениеКонтактнойИнформациейСлужебный.СтрокуJSONВСтруктуру(Ответ.Содержимое);
	
	Возврат Ответ;
	
КонецФункции

// Метод получения списка валют
// 
// Параметры:
//  InstrumentStatus - ПеречислениеСсылка.TrBItrumentStatus - Статус запрашиваемых инструментов
//  Песочница - Булево - Ложь, если это не песочница.
//  
// Возвращаемое значение:
//  Произвольный - Массив структур ответа данного запроса
//  
Функция Currencies(InstrumentStatus, Песочница = Ложь) Экспорт
	
	URL = "https://invest-public-api.tinkoff.ru/rest/tinkoff.public.invest.api.contract.v1.InstrumentsService/Currencies";
	
	ПараметрыТелаЗапроса = Новый Структура();
	ПараметрыТелаЗапроса.Вставить("instrumentStatus", InstrumentStatus);
	
	ТелоЗапроса = "{
					|InstrumentStatus: [InstrumentStatus]
					|}";
					
	ТелоЗапроса = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТелоЗапроса, ПараметрыТелаЗапроса);
	
	Ответ = TrBЗапросыTinkoff.ЗапросВТинькоффИнвестиции(URL, ТелоЗапроса, Песочница);
	
	Ответ.Содержимое = УправлениеКонтактнойИнформациейСлужебный.СтрокуJSONВСтруктуру(Ответ.Содержимое);
	
	Возврат Ответ;
	
КонецФункции

// Метод
// Параметры:
//  IdType - ПеречислениеСсылка.TrBInstrumentIdType - Тип идентификатора инструмента. Возможные значения: figi, ticker
//  ClassCode - Строка - Идентификатор class_code. Обязателен при id_type = ticker.
//  Idd - Строка - Идентификатор запрашиваемого инструмента.
//  Песочница - Булево - Ложь, если это не песочница.
// Возвращаемое значение:
//  Произвольный - Массив структур ответа данного запроса
//  
Функция CurrencyBy(IdType, ClassCode, Idd, Песочница = Ложь) Экспорт
	
	URL = "https://invest-public-api.tinkoff.ru/rest/tinkoff.public.invest.api.contract.v1.InstrumentsService/CurrencyBy";
	
	ПараметрыТелаЗапроса = Новый Структура();
	ПараметрыТелаЗапроса.Вставить("IdType", IdType);
	ПараметрыТелаЗапроса.Вставить("ClassCode", ClassCode);
	ПараметрыТелаЗапроса.Вставить("Id", Idd);
	
	ТелоЗапроса = "{
					|'IdType': [IdType],
					|'ClassCode': [ClassCode],
					|'Id': [Idd]
					|}";
					
	ТелоЗапроса = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТелоЗапроса, ПараметрыТелаЗапроса);
	
	Ответ = TrBЗапросыTinkoff.ЗапросВТинькоффИнвестиции(URL, ТелоЗапроса, Песочница);
	
	Ответ.Содержимое = УправлениеКонтактнойИнформациейСлужебный.СтрокуJSONВСтруктуру(Ответ.Содержимое);
	
	Возврат Ответ;
	
КонецФункции

// Метод редактирования списка избранных инструментов
// 
// Параметры:
//  Instruments - Массив из Строка - Массив инструментов, где элемент - строка Figi
//  ActionType - ПеречислениеСсылка.TrBEditFavoritesActionType - Тип действия со списком избранных инструментов
//  Песочница - Булево - Ложь, если это не песочница.
//  
// Возвращаемое значение:
//  Произвольный - Массив структур ответа данного запроса
//  
Функция EditFavorites(Instruments, ActionType, Песочница = Ложь) Экспорт
	
	URL = "https://invest-public-api.tinkoff.ru/rest/tinkoff.public.invest.api.contract.v1.InstrumentsService/EditFavorites";
	
	Инструмент = "";
	
	Для каждого Элемент Из Instruments Цикл
		
		ПараметрИнструмента = Новый Структура("Инструмент", Элемент);
		
		Инструмент = 	"{ 
					|figi : [Инструмент]
					|}," + Инструмент;
		МассивИнструментов = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Инструмент, ПараметрИнструмента);
		
	КонецЦикла;
	
	ПараметрыТелаЗапроса = Новый Структура();
	ПараметрыТелаЗапроса.Вставить("ActionType", "EDIT_FAVORITES_ACTION_TYPE_ADD");
	ПараметрыТелаЗапроса.Вставить("Instruments", Лев(МассивИнструментов, СтрДлина(МассивИнструментов) - 1));
	
	ТелоЗапроса = "{
					|Instruments: [[Instruments]],
					|ActionType: [ActionType]
					|}";
					
	ТелоЗапроса = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТелоЗапроса, ПараметрыТелаЗапроса);
	
	Ответ = TrBЗапросыTinkoff.ЗапросВТинькоффИнвестиции(URL, ТелоЗапроса, Песочница);
	
	Ответ.Содержимое = УправлениеКонтактнойИнформациейСлужебный.СтрокуJSONВСтруктуру(Ответ.Содержимое);
	
	Возврат Ответ;
	
КонецФункции

// Метод
//  
// Параметры:
//  
//  Песочница - Булево - Ложь, если это не песочница.
//  
// Возвращаемое значение:
//  Произвольный - Массив структур ответа данного запроса
//  
Функция ЛюбаяФункци(Песочница = Ложь) Экспорт
	
	URL = "https://invest-public-api.tinkoff.ru/rest/";
	
	ПараметрыТелаЗапроса = Новый Структура();
	ПараметрыТелаЗапроса.Вставить("", "");
	
	ТелоЗапроса = "{
					|idType: [],
					|classCode: [],
					|id: []
					|}";
					
	ТелоЗапроса = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ТелоЗапроса, ПараметрыТелаЗапроса);
	
	Ответ = TrBЗапросыTinkoff.ЗапросВТинькоффИнвестиции(URL, ТелоЗапроса, Песочница);
	
	Ответ.Содержимое = УправлениеКонтактнойИнформациейСлужебный.СтрокуJSONВСтруктуру(Ответ.Содержимое);
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти